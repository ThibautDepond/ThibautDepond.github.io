/* #region BULMA */

// https://github.com/jgthms/bulma/blob/master/sass/utilities/initial-variables.sass
// Responsiveness

$devices: mobile, tablet, touch, desktop, widescreen, fullhd;

// The container horizontal gap, which acts as the offset for breakpoints
$containerGap: 32px !default;

// 960, 1152, and 1344 have been chosen because they are divisible by both 12 and 16
$tablet: 769px !default;

// 960px container + 4rem
$desktop: 960px + 2 * $containerGap !default;

// 1152px container + 4rem
$widescreen: 1152px + 2 * $containerGap !default;
$widescreen-enabled: true !default;

// 1344px container + 4rem
$fullhd: 1344px + 2 * $containerGap !default;
$fullhd-enabled: true !default;

$breakpoints: (
    "mobile": ("until": $tablet),
    "tablet": ("from": $tablet),
    "tablet-only": ("from": $tablet, "until": $desktop),
    "touch": ("from": $desktop),
    "desktop": ("from": $desktop),
    "desktop-only": ("from": $desktop, "until": $widescreen),
    "until-widescreen": ("until": $widescreen),
    "widescreen": ("from": $widescreen),
    "widescreen-only": ("from": $widescreen, "until": $fullhd),
    "until-fullhd": ("until": $fullhd),
    "fullhd": ("from": $fullhd),
) !default;

@mixin from($device) {
    @media screen and (min-width: $device) {
        @content;
    }
}

@mixin until($device) {
    @media screen and (max-width: ($device - 1px)) {
        @content;
    }
}

@mixin between($from, $until) {
    @media screen and (min-width: $from) and (max-width: ($until - 1px)) {
        @content;
    }
}

@mixin mobile {
    @media screen and (max-width: ($tablet - 1px)) {
        @content;
    }
}

@mixin tablet {
    @media screen and (min-width: $tablet),
    print {
        @content;
    }
}

@mixin tablet-only {
    @media screen and (min-width: $tablet) and (max-width: ($desktop - 1px)) {
        @content;
    }
}

@mixin touch {
    @media screen and (max-width: ($desktop - 1px)) {
        @content;
    }
}

@mixin overflow-touch {
    -webkit-overflow-scrolling: touch;
}

@mixin desktop {
    @media screen and (min-width: $desktop) {
        @content;
    }
}

@mixin desktop-only {
    @if $widescreen-enabled {
        @media screen and (min-width: $desktop) and (max-width: ($widescreen - 1px)) {
            @content;
        }
    }
}

@mixin until-widescreen {
    @if $widescreen-enabled {
        @media screen and (max-width: ($widescreen - 1px)) {
            @content;
        }
    }
}

@mixin widescreen {
    @if $widescreen-enabled {
        @media screen and (min-width: $widescreen) {
            @content;
        }
    }
}

@mixin widescreen-only {
    @if $widescreen-enabled and $fullhd-enabled {
        @media screen and (min-width: $widescreen) and (max-width: ($fullhd - 1px)) {
            @content;
        }
    }
}

@mixin until-fullhd {
    @if $fullhd-enabled {
        @media screen and (max-width: ($fullhd - 1px)) {
            @content;
        }
    }
}

@mixin fullhd {
    @if $fullhd-enabled {
        @media screen and (min-width: $fullhd) {
            @content;
        }
    }
}

@mixin breakpoint($name) {
    $breakpoint: map-get($breakpoints, $name);

    @if $breakpoint {
        $from: map-get($breakpoint, "from");
        $until: map-get($breakpoint, "until");

        @if $from and $until {
            @include between($from, $until) {
                @content;
            }
        }

        @else if $from {
            @include from($from) {
                @content;
            }
        }

        @else if $until {
            @include until($until) {
                @content;
            }
        }
    }
}

@mixin container-from($name, $width) {
    @container #{$name} (min-width: #{$width}) {
        @content;
    }
}

@mixin container-until($name, $width) {
    @container #{$name} (max-width: #{$width - 1px}) {
        @content;
    }
}

/* #endregion */
